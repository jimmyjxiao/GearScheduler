//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "Calpage.xaml.h"
#include "WeekViewControl.xaml.h"

void ::CheckoutManager::Calpage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///Calpage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class CheckoutManager::Calpage::Calpage_obj1_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::CheckoutManager::Calpage>
{
public:
    Calpage_obj1_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 8:
                this->obj8 = safe_cast<::CheckoutManager::WeekViewControl^>(__target);
                break;
            case 9:
                this->obj9 = safe_cast<::CheckoutManager::MonthViewControl^>(__target);
                break;
        }
    }
private:
    // Fields for each control that has bindings.
    ::CheckoutManager::WeekViewControl^ obj8;
    ::CheckoutManager::MonthViewControl^ obj9;

    // Update methods for each path node used in binding steps.
    void Update_(::CheckoutManager::Calpage^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_CurrentCalendar(obj->CurrentCalendar, phase);
            }
        }
    }
    void Update_CurrentCalendar(::CheckoutManager::CalInfo^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_CheckoutManager_WeekViewControl_cal(this->obj8, obj, nullptr);
            ::XamlBindingInfo::XamlBindingSetters::Set_CheckoutManager_MonthViewControl_cal(this->obj9, obj, nullptr);
        }
    }
};

void ::CheckoutManager::Calpage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->lengthPivot = safe_cast<::Windows::UI::Xaml::Controls::Pivot^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Pivot^>(this->lengthPivot))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&Calpage::lengthPivot_SelectionChanged);
        }
        break;
    case 3:
        {
            this->list = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->list))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&Calpage::list_SelectionChanged);
        }
        break;
    case 4:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element4 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element4))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::AppBarButton_Click);
        }
        break;
    case 5:
        {
            ::Windows::UI::Xaml::Controls::Button^ element5 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element5))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::Button_Click);
        }
        break;
    case 6:
        {
            this->devradio = safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(this->devradio))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::RadioButton_Checked);
        }
        break;
    case 7:
        {
            ::Windows::UI::Xaml::Controls::RadioButton^ element7 = safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(element7))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::RadioButton_Checked);
        }
        break;
    case 8:
        {
            this->weekview = safe_cast<::CheckoutManager::WeekViewControl^>(__target);
        }
        break;
    case 9:
        {
            this->monthView = safe_cast<::CheckoutManager::MonthViewControl^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::CheckoutManager::Calpage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                Calpage_obj1_Bindings* objBindings = new Calpage_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


