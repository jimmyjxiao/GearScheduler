//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "Calpage.xaml.h"
#include "WeekViewControl.xaml.h"

void ::CheckoutManager::Calpage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///Calpage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class CheckoutManager::Calpage::Calpage_obj1_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::CheckoutManager::Calpage, ::XamlBindingInfo::XamlBindingTrackingBase>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    Calpage_obj1_Bindings()
    {
        InitializeTracking(this);
    }

private:
    ~Calpage_obj1_Bindings()
    {
        ReleaseAllListeners();
    }

public:

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 10: // Calpage.xaml line 43
                this->obj10 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 14: // Calpage.xaml line 60
                this->obj14 = safe_cast<::CheckoutManager::WeekViewControl^>(__target);
                break;
            case 15: // Calpage.xaml line 57
                this->obj15 = safe_cast<::CheckoutManager::MonthViewControl^>(__target);
                break;
        }
    }

    void DisconnectUnloadedObject(int connectionId)
    {
        throw ref new ::Platform::InvalidArgumentException("No unloadable elements to disconnect.");
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj10;
    ::CheckoutManager::WeekViewControl^ obj14;
    ::CheckoutManager::MonthViewControl^ obj15;
    
    // Fields for binding tracking.
    ::Windows::UI::Xaml::Data::INotifyPropertyChanged^ cachePC_weekview = nullptr;
    ::Windows::Foundation::EventRegistrationToken tokenPC_weekview;

    // Update methods for each path node used in binding steps.
    void Update_(::CheckoutManager::Calpage^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
            {
                this->Update_weekview(obj->weekview, phase);
            }
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_CurrentCalendar(obj->CurrentCalendar, phase);
            }
        }
    }
    void Update_weekview(::CheckoutManager::WeekViewControl^ obj, int phase)
    {
        this->_bindingsTracking->UpdatePropertyChangedListener(obj, &this->cachePC_weekview, &tokenPC_weekview);
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
            {
                this->Update_weekview_dateRange(obj->dateRange, phase);
            }
        }
    }
    void Update_weekview_dateRange(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
        {
            // Calpage.xaml line 43
            Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj10, obj, nullptr);
        }
    }
    void Update_CurrentCalendar(::CheckoutManager::CalInfo^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            // Calpage.xaml line 60
            Set_CheckoutManager_WeekViewControl_cal(this->obj14, obj, nullptr);
            // Calpage.xaml line 57
            Set_CheckoutManager_MonthViewControl_cal(this->obj15, obj, nullptr);
        }
    }

    virtual void ReleaseAllListeners() override
    {
        this->_bindingsTracking->UpdatePropertyChangedListener(nullptr, &this->cachePC_weekview, &tokenPC_weekview);
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
        if (cachePC_weekview != nullptr && cachePC_weekview->Equals(sender))
        {
            ::Platform::String^ propName = e->PropertyName;
            ::CheckoutManager::WeekViewControl^ obj = safe_cast<::CheckoutManager::WeekViewControl^>(sender);
            if (propName == nullptr || propName->IsEmpty())
            {
                if (obj != nullptr)
                {
                    this->Update_weekview_dateRange(obj->dateRange, DATA_CHANGED);
                }
            }
            else if (propName == "dateRange")
            {
                if (obj != nullptr)
                {
                    this->Update_weekview_dateRange(obj->dateRange, DATA_CHANGED);
                }
            }
        }
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void MapChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IMapChangedEventArgs<::Platform::String^>^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, ::Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (sender != nullptr)
        {
        }
    }
    static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(::Windows::UI::Xaml::Controls::TextBlock^ obj, ::Platform::String^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = targetNullValue;
        }
        obj->Text = value;
    }
    static void Set_CheckoutManager_WeekViewControl_cal(::CheckoutManager::WeekViewControl^ obj, ::CheckoutManager::CalInfo^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = (::CheckoutManager::CalInfo^) ::Windows::UI::Xaml::Markup::XamlBindingHelper::ConvertValue(::CheckoutManager::CalInfo::typeid, targetNullValue);
        }
        obj->cal = value;
    }
    static void Set_CheckoutManager_MonthViewControl_cal(::CheckoutManager::MonthViewControl^ obj, ::CheckoutManager::CalInfo^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = (::CheckoutManager::CalInfo^) ::Windows::UI::Xaml::Markup::XamlBindingHelper::ConvertValue(::CheckoutManager::CalInfo::typeid, targetNullValue);
        }
        obj->cal = value;
    }
};

void ::CheckoutManager::Calpage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->lengthPivot = safe_cast<::Windows::UI::Xaml::Controls::Pivot^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Pivot^>(this->lengthPivot))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&Calpage::lengthPivot_SelectionChanged);
        }
        break;
    case 3:
        {
            this->list = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->list))->SelectionChanged += ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&Calpage::list_SelectionChanged);
        }
        break;
    case 4:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element4 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element4))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::AppBarButton_Click);
        }
        break;
    case 5:
        {
            ::Windows::UI::Xaml::Controls::Button^ element5 = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(element5))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::Button_Click);
        }
        break;
    case 6:
        {
            this->devradio = safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(this->devradio))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::RadioButton_Checked);
        }
        break;
    case 7:
        {
            ::Windows::UI::Xaml::Controls::RadioButton^ element7 = safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::RadioButton^>(element7))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::RadioButton_Checked);
        }
        break;
    case 8:
        {
            this->weekTools = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
        }
        break;
    case 9:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element9 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element9))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::AppBarButton_Click_1);
        }
        break;
    case 11:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element11 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element11))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::AppBarButton_Click_2);
        }
        break;
    case 12:
        {
            ::Windows::UI::Xaml::Controls::AppBarToggleButton^ element12 = safe_cast<::Windows::UI::Xaml::Controls::AppBarToggleButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarToggleButton^>(element12))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::Calpage::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&Calpage::AppBarToggleButton_Click);
        }
        break;
    case 13:
        {
            this->monthitem = safe_cast<::Windows::UI::Xaml::Controls::PivotItem^>(__target);
        }
        break;
    case 14:
        {
            this->weekview = safe_cast<::CheckoutManager::WeekViewControl^>(__target);
        }
        break;
    case 15:
        {
            this->monthView = safe_cast<::CheckoutManager::MonthViewControl^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::CheckoutManager::Calpage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1: // Calpage.xaml line 1
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                Calpage_obj1_Bindings* objBindings = new Calpage_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


