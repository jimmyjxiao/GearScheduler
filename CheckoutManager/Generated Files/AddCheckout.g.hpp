//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "AddCheckout.xaml.h"

void ::CheckoutManager::AddCheckout::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///AddCheckout.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class CheckoutManager::AddCheckout::AddCheckout_obj1_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::CheckoutManager::AddCheckout>
{
public:
    AddCheckout_obj1_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 2:
                this->obj2 = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
                break;
        }
    }
private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::ComboBox^ obj2;

    // Update methods for each path node used in binding steps.
    void Update_(::CheckoutManager::AddCheckout^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_DeviceTypes(obj->DeviceTypes, phase);
            }
        }
    }
    void Update_DeviceTypes(::Windows::Foundation::Collections::IVector<::Platform::String^>^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this->obj2, obj, nullptr);
        }
    }
};

void ::CheckoutManager::AddCheckout::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->devicepicker = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
        }
        break;
    case 3:
        {
            this->returnDate = safe_cast<::Windows::UI::Xaml::Controls::CalendarDatePicker^>(__target);
        }
        break;
    case 4:
        {
            this->returnTime = safe_cast<::Windows::UI::Xaml::Controls::TimePicker^>(__target);
        }
        break;
    case 5:
        {
            this->startDate = safe_cast<::Windows::UI::Xaml::Controls::CalendarDatePicker^>(__target);
        }
        break;
    case 6:
        {
            this->startTime = safe_cast<::Windows::UI::Xaml::Controls::TimePicker^>(__target);
        }
        break;
    case 7:
        {
            this->sameDay = safe_cast<::Windows::UI::Xaml::Controls::ToggleSwitch^>(__target);
        }
        break;
    case 8:
        {
            ::Windows::UI::Xaml::Controls::AppBarButton^ element8 = safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::AppBarButton^>(element8))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::CheckoutManager::AddCheckout::*)
                (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&AddCheckout::AppBarButton_Click);
        }
        break;
    case 9:
        {
            this->teamSelector = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::CheckoutManager::AddCheckout::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                AddCheckout_obj1_Bindings* objBindings = new AddCheckout_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


